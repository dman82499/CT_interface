import random
"""camera_test controller."""

# You may need to import some classes of the controller module. Ex:
#  from controller import Robot, Motor, DistanceSensor
from controller import Robot, Camera
import time
from src import repetitionstore

#initializing objects for execution
path_object = repetitionstore.Repetitionsdatabase(path = "")
path = path_object.path
# create the Robot instance.
robot = Robot()

# get the time step of the current world.
timestep = int(robot.getBasicTimeStep())

pipe = open(path, 'w')

#camera = robot.getCamera("camera")

camera = Camera("camera")

camera.enable(60)

hello = camera.getImage()
print("attempting to print image")
print(hello)
c = open
image = []

print(camera.getImage())
# You should insert a getDevice-like function in order to get the
# instance of a device of the robot. Something like:
#  motor = robot.getMotor('motorname')
#  ds = robot.getDistanceSensor('dsname')
#  ds.enable(timestep)

# Main loop:
# - perform simulation steps until Webots is stopping the controller
while robot.step(timestep) != -1:
    #this will eventually be different
    for x in range(camera.getHeight()):
        for y in range(camera.getHeight()):

    print("printing the following output:")
    hello = camera.getImage()
    print(hello)
    pipe.seek(0)
    pipe.truncate()
    pipe.write(hello)
    print("END OF OUTPUT")

    # Read the sensors:
    # Enter here functions to read sensor data, like:
    #  val = ds.getValue()

    # Process sensor data here.

    # Enter here functions to send actuator commands, like:
    #  motor.setPosition(10.0)
    pass

# Enter here exit cleanup code.
